# Automatically generated on 2020-06-22 UTC from https://codemagic.io/app/5ef0cde503ad6bb7a4d4dd33/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

# Workflow setup for building Native Android project
workflows:
  simple-workflow:
    name: Native Android
    max_build_duration: 60
    scripts:
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # run tests
        ./gradlew test
      - |  
        # build debug apk
        ./gradlew assembleDebug
    artifacts:
      - app/build/**/outputs/**/*.apk
    publishing:
      email:
        recipients:
          - sbis1999@gmail.com
  debug-workflow:
    name: Native Android
    max_build_duration: 60
    scripts:
      - |
        # launching android emulator
        emulator -avd emulator > /dev/null 2>&1 &
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # run tests
        ./gradlew test
        ./gradlew connectedAndroidTest
      - |  
        # build debug apk
        ./gradlew assembleDebug
    artifacts:
      - app/build/**/outputs/**/*.apk
    publishing:
      email:
        recipients:
          - sbis1999@gmail.com
  release-workflow:
    name: Native Android
    max_build_duration: 60
    environment:
      vars:
        CM_KEYSTORE: Encrypted(Z0FBQUFBQmU4WXU2MTFmRU95aTJGTmJUQndIZmFYX1JRdjlPSW9SN2t3TWNwcTZwLUE1cVVGSHBkcjZhR0NsSHlud2JPcEFldkNwXzVxX0N1RTRCU205bzF4Z0dhT2k2QmxNbDdUcm9XRW1YNHR0VEc3ZUp0NVI0aEFwdy0xSW5DcC1udGVJcGtYVUNtT3NHcEk5US1VT0VZV05JQmw1el9fem9VSDlfZFFwMnIxZmtLNENkTFJuMGtBYUtBeFFDRDllRUtmQi1WNDNKb1VCdE9CRE1iRzhoaGVtT3FuRVVkUTBnNkdRZl9GeXlkX0pQRmRsSnREVXN3clRiRHM2V3VZeXFaaUhFakZRRTRRd3EzbW5hYzQwRnktbWJzNWFRUjVwVHd2UUw5d0ZSU2NiSVZEeDczZ2ZkN0xXemlJOTc0SjJTbFpyc2ZlR2ZvMDhsLWRrNFRWXzgyU0FLcVd3UUczMk1EOUhFRXp1Y1VILTRjOEY2SnRDeTB2cTJaTEpvUExyd1pQNVJIS3BkUnpBeHJ6Sy1lZ24xel9ISXNjUjlNajF6TzhhUi0tWFZQbEtqUnNOZzF4V0lUUlNqRmNmeV81dzE1NWhQWE1hWU9FcWZSbVNPQ1FnU1BtMzJzWC1KT2Uxb1VTRU14eWloN01zYW5qai1JZkptMUstYUNIQkdxUFA4TTBreV9Eck1HRXg4MkN4RjlVcUtkVGRaUnNZdmkxcGs2SV9UdXk4U04wZnhlQmlaMDdtdS01MzhJRkVGZzVfN1cwMC1NeTFZQzducUthYXgtWXdGUmhXMGxzMVRuUzk4c0hPQ0xzZlBUaDVaMmZ2MWRTNjY2amVUcFk3NlVyQkpkbkZSeElLbGJsWVNnWVJkSGlvMTRqTm4wUEZOSFZwb2pod1JZZUVKQldRa3ctTnhybzhrWTd2TDROSEozbl9BTDFwNnN5NlItMzByM2xZUXJ1WGJIblBWVGVsOHB4aHY0bnNhRWdDVGI2aTE4N0FFSVFwSlBlWU5zMXVSdkFkb2ltcW4wejRaanZOa1hLSVBqVTczbDYtZUNBNzIzTDhYT2syWDhHclE3RThXeTBHQ0dLNkFCM0ZwU1g1dXlRZkxfc3dWVy0xU2hnd0djNkR2YmFYSExvRmVmQkxnSno1UThTTHA5VlVzYl90OVRqU2RMN0piNkpLMkkzTmlOMHBITnRLazRxSkRnUzM2ZTQxSGpQNDlFYktKT1VOdnlzMTRCSFZfdG5RUmMxb2JSX2U4WWREY2kxLUlYWWlkbG10NXFYbGpJVW5ZcTR0bGdVMk5KSExwcW9oQi1vWlVwU3pRSzE4Nm5oZXVCT2M4WDNNeDJENlh3WnFZdV9QTVZrRGQxOVdoT1M1amZGaF9qeUw1UnZUUzVPNkhObm1icEZqeGN2bW82Y3RPV3duckRTcllxeXNpOXd6ZG1ISUlDbXFHZWM1UUEwTDVuTmNBS2RrbnQxRDF1N3VfSFdFU0M4RkstRXVieWpucHVzd3VxeEhWeTJjOHJ4WHJ5bThBMjF3WHlWbU1RWkxQTHVvQVdhc3JOdG0xb3g5WVVYby04Y3hYV0Y2RGdYRTVEZXl6RlZBTF95TTZTUHpZSFRWSmVORi1zWkJsa2NrSVl3eDlzLWE2RnlhQkpKc2tNVUN1ZWFtODVYTHA2WEdoVDVKQWVOaFllaFdaZGtyMFJkbHZ0OXI3TnBXa3pJSzBkQkhIRmhEWEpUclBqM285d24tMF9pUXJiSnJMMEU3TzVkeE1ZRFNFa0M2QWJPMGpmWW1VNlg1WFhlN2I1aHpWYkxSNEJkaXR0WDc0WDUxT3ZNRThJM2ltRGpuc0dWVFQ3V3JnSnk3QWEzb3JHX184ZVlLY25VMnJ1WmpyTXJjakRLVzJtdFB1MVNlcjNPRlQzNnhVbGNjcXJiOEh4dlJqT201WUJaS2RTSnlzYS04RHdHeGRacFo1TUNjdGRXdHQ4cEhERmZFeC00aTg5N2tBQk80Y1dyWlZ0Wm9DTDlLUTFuZjZINW96bmZXNjkyZmtTcnU1RjFsWFFPeTFvVVNPYmZTaFNuQlB1aUg0TkxkVDNPZEptcUNfLWxXeWtYdFVoc1dvN19FOTJTTjZuZ0RXN29pRU9aTW51NVkwUFM4RE9ZNTNmcTRqaVJ1SFN5WnZ6dnFIOVJKbWk5ZWs1aWZoQ1ZDMXVKQWpXRU04UFJNSEtKaWcwc3RlVmYwYURCTzBfeVJwT2RFam9fcUVMcGp1cmVENHhNSENfejN5X1paUGZrakRDM1Bnb0QyR3JnZmlLYWd6elZlQXVBWDB4aGNFU1pTbWFkc0w0SUdRR0RKbFR4cWhUYWtNMXRpNnZ4cDVEbFllQXFNLXdjeUQ0WXMwUGw3dDVoSk50QUx0bl9pNlNxd2NFSVkwR0wzVC1BWWIzcjhpZTdLaHE3N3gydHdweGp0MnM0U2h6SC1kbTVhQTBjOHBqRmkyLTRiWDZQQW9EMGs0QVJFbjF6TWZKOUhONGVyVmRsN0ctbWN0MWlkX2w0V1pQdUdrMVZPeEVSb1Y3dVdWX0J3Y1VmVHN3d0VGczA5ZzQwNUJNbVRuaGgtQWlRWnJPZEtQOHV0TS1EaC1wTVlVaWZFc0M4Q2xzVmloaE0wNlgxeXhMNjZsZjR1TmJpRUx0YVRrdWlzeGNFcHAxQ2dHb21nSmJCR0hZQ3c3LWYtZTRXMnpxZlI4R0ZEVUhQdFRvZDRWVDV3dzFUMWZ6MS1EWF9CbVI1N25Ma3dzV2JEcjR4cGdOendsVTA3TjBXLUg4UjZpUEF2ZWxyZEpZYnZyaDFqbXhMaEhLZE45TXh2bVdjb19XaVlGNE9TSG5QTDlCS3R4UHFuT0xxQUdxTWUxVHdvSS1peWt5SGRzaGhPakpKNUJHMmd0OFB5ZmU2RThqZkhtOFRPZVp6TnE1OEZxeU0xYzZKMHdLbGtOd1Z0bk8wc0ZVZHNDVUxEaGRIekdTZXEtTWVabW9oODI0QlctVFVDWWVQSHlsLUpxS3E3NVRKMktESzdVR2Q1c3BPeXZUcmxDWmY4dlRfUjl1M2tHTVNjV3dlNzY1blFzZFJQUzV6YW5GNE5yZ3d6SHZDSU9VMkxyX2gxUDgxMGpZejZwcmZJQ3BWYV8wT1BaeG9JU2FMdDZkT1h4QzMwVDF0WTN6ZGVPYzl3U3NCS1A5VlFSRl9iblFmcWNjWHFHeG9KWGk1bjBnNGJYNkVBd0VkNnFjaHMyMi15MXNmTFhnWnpPSURUTXgySDB4WXA1ZFkwbl9KQWRhNmh1bTFCcTZ1VHJHb1EwTWFjV25GaEhDbFhEUm1jVDI2X2EyZUktQ2dSM3ZPN0lSTmoxVmJjVzhLMDVpLTRKUkhkRUFpZG51U3duOFhILXluSG5sY3ZMR1B3X2VZbk0yQzJjUzl4MENWWmljVmtwT2U4NkRvelJuY1NlZ01mMjRyTVZBSE4yNWZrNDMzWkFPY08yLUMwZFZSeHNBczlQNzRiSFVWdk9XdW1WNTQxZ2pjMEZlR0dhaWVSQi1lamt2SjFrT0YzbE10amU0ckdtaWFqLW5INnVPWWhDYTFkRHUyeTlLdkVsNEJGLXRENlk5STczaERZLWI2OWRVcDJocHdTcnRaei1XUjYzaUZLZFpIUlFWLWJILVQ5cGZpaG9qcVNVZ3FJcGNXYXZ2cWJLbnkwdWVmRGhxdkhXbzR6QU0wWGE3LTZJbUN2TXdnNGpxSW5MYVoyU09xaGZHM1ZObThOYXNzdVRwcnhHRnlVVDNYbFpyTS1FM1NsRi1jLTBnZFNnY01qRjRlWlNfSUkyYzgyU1NOX0hIVHh0SU1VR1A5NEZpUF9LeWdRbU9WdDdCelE0Zm5Cb2lLS05lQjFwNmFUeGVURXZ1eWNLYjJmcWthQTZfcDZ5U3F1TnNvZEpEa1pLWkVKcDhKX2V6VFFmY09HNlFfTkFSMThHamplSDl4M3o1U1VEZ3AzTXJoaUpFejA4andFdDE2VkFWdnVXR1JqUk1fU0JjUWU3SmVySzFpNHl4eXViMEZCR3RQZS1rc2lsR1FlODE2ZFZIWFJvRS0wNTRFZjdBWWZ1akVIVFpiQWZaQVpKemQ4ZVBtTHRZQXVnVFZFazZiYVhFbE40anl4dXp4bWxrcldXcUJjcVFzcHV4TzU5V1pydjZfNkR5cnVwNGFHa1ZpOG12S3NQSEVwdURyb0dxODVTeGYxRndUVHBfbVp6c19iVUNmM3NZZTdTT1A2U3MzZXVLZkZLMGpSZGxzN1ZDWng0R2otdWZHem5mZ001cHJQWUNKbkhrSWZ6VXRfdDVuTVpBMS02Nmt3SWxrbmRMUlFqLWVKREhDMVRxd21lSUpVYzBlVUtscGxrMTFBUW5UejZvaGc0eklBb2kzWVlBMHFTYThnbHVPQ0RYdzFCcnhmaUV3MU5LMWZQQUhrU1pnVmZRNzhnRDlqWHBYS3Z1dHZJZXNCZDlkOXdiQU12R0lfWWJjMHZvSThMaE5NOW1SdEx4YVJTZHNsbWt1SHFCdVBGOGJzSGY3ZVlLMkgwaHp2QjR2aDdZX1pJMFRQemtET05wOXR3eTNUYUczUFlMZWlBMGxGRWtYSHNLUUQ4ZE5YSWNROFUzT1UyUlRDTlNJcXNYQkYtRUNFOGxOT1JnVW0tTnlibzh0NF8wZzNKMnoxN0swV2pXWFBvdGJlT214RFUyS2lYd3FxdUpxU1hpMXk3ZzdfRmtCOURTZ1dBMHVod3k0TjNwWjRiMUlwVUZYdlNFN3FuVDExc1ZFVjF5RjA5TUlpV3MyU3YzMkNTeU16V0kzOXJ2SG9uU3ZncW55bzJuRHU1LS01VkFaMUNlV1B0MlFpZ2ZCTWs1RWl3MVdMTW53MndyR3BGdlNLNDVXcTRXYjdlb1p1SzgwdDRVRVlscjhJSUF3TWhnMXhqOUQ4Mm5HLVlmaTZocUhNUnk5dXZMaHE2T3djSmhzWkdOeDF3aGozYTBWS3haczV2TV9NYXVlSlRyN0xPRVZqbnZIbTE1LVppM29jWDJRaE9uN2ZBTE4yelFoTkJsYmJqYldTY0xXNVVNbElqMm80VnZyckl2cXBJU214Tm1yNUpnWUViTl9LX3JhU3ozMXRERjNWRmgtSUdWekN3N3l5NVdsMmNoWkpLYmM2U2dpUEVjUm45b0R5TXZ6X0RNZ1puS3VWeHpZdG9MQXF3MjgwT3czN0dlYnpYdGVlV29MUmR6SVVha28wdXV1cEN1a1F1Q1hpNlM5U2RleU9ZUkU5SVMxSmR2VTBfUXNJUTBya2J1WHlwQ3hCV1Qtdl9SbWhLZVBRbnlzYUdJSVZITHRyd1BsVUp4dmxocFFOTGVPS1hhOFJCa0dGVFhpUUVGdGxDMk9BYllxcExhRDZaWkQ4djNCemNZc1NzOXMwUkpMR0FHV3ZCQnFkR1N3WlpwOEdHMVV1NERMWE9maU5HYTZfRWRmM29lMU5WTkMyc0RlZTBUdm1LNVQ4T0tXNEJyRzdqRWxJRGZ5dzdaM1JpU04yRC12UEpZSDNQRF8zMlR3WVdRLW1zUUJzb21tM0FYRU50SUVHa0NyUEtvWkhacDRSVnR1TTctdHozUzFhZVlra21RU0lKRjB6VWVnSmxKOW45Z0wzbTIxdFliakVwRm5QdWZmWS00Qi1XUVlOQThhMl84VHhUVVU2clBESjBEZ2JWTE1mZmVtcVk2WU40LUdmdmdsT1VDaE5MY1BuZ29ZNmZVeWc4bndrOXpyR2c0bzlHczJsemg5WEdnUkgyZ0FZdWoxZXdPT1pGVmdQb255TENxZGx3X2x0bU5IdmhRRlVHeWVkTmdPNEpIalpXT3hrT0NlbWZMMTBPS1E2LTN3VE5qOWxISTZTbVpoZFVYb0x1bFUzMUQzczR0LS1uMmR6R1pZYUstZ1VTY0VXbGRpNlhCdmhpMjBNVGtYVk1hMEV6cFZrMWczcEtRcFNEbmZEenpUNkEzWVBoWlNaZG1OTnRmV3hCM0FKYk1mQm9zemFFTHg3SVFERFZBZmVTTFpBVzk3bTE5WXd1end3R3lvZ0dRTFM2YUNnaGhMVHdkbjc3QVEtVTl3R1ROY1ZuQjg4YWNaamE4Y3JpalhSYjZ2SVpTejFNV1BfR2dqTG5GVUpHRGF5N0h4blU5X3RVZ0xnbDZtVWVqMkRNblE3MC1VM3RvNFA5VDN6YWxxX2ZLd2J0UV9NWE00WHY4b1gxRm1LZQ==)
        CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmU4WXc5RlFTc0hqTk5FY3NCNmhjZ1VfYi1GNlJRWkE4M0g3SG5teG5DaklkNUdnQ1NPWnc5QnJHZmVkR2h1Rk14eWJGYk41UXdVXzFob2l5eDFyR1hSV0VaWUE9PQ==)
        CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmU4WXc5RlFTc0hqTk5FY3NCNmhjZ1VfYi1GNlJRWkE4M0g3SG5teG5DaklkNUdnQ1NPWnc5QnJHZmVkR2h1Rk14eWJGYk41UXdVXzFob2l5eDFyR1hSV0VaWUE9PQ==)
        CM_KEY_ALIAS_USERNAME: app
    scripts:
      - |
        # launching android emulator
        emulator -avd emulator > /dev/null 2>&1 &
      - |
        # set up release keystore
        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
        cat >> "$FCI_BUILD_DIR/key.properties" <<EOF
        storePassword=$CM_KEYSTORE_PASSWORD
        keyPassword=$CM_KEY_ALIAS_PASSWORD
        keyAlias=$CM_KEY_ALIAS_USERNAME
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # run tests
        ./gradlew test
        ./gradlew connectedAndroidTest
      - |  
        # build release apk
        ./gradlew assembleRelease
    artifacts:
      - app/build/**/outputs/**/*.apk
    publishing:
      email:
        recipients:
          - sbis1999@gmail.com
